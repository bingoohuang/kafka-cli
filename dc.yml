version: '3.3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    container_name: zookeeper
    networks:
      default:
        ipv4_address: 172.20.0.10
  zkui:
    image: juris/zkui
    depends_on:
      - zookeeper
    ports:
      - "9090:9090"
    links: # 连接本compose文件创建的container
      - zookeeper
    environment:
      ZK_SERVER: zookeeper:2181
    restart: always
    networks:
      default:
        ipv4_address: 172.20.0.9
  kafka0:
    image: wurstmeister/kafka:2.11-0.10.2.2
    depends_on:
      - zookeeper
    container_name: kafka0
    ports:
      - 9092:9092
      - 9192:9192
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka0:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 0
      JMX_PORT: 9192
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_MESSAGE_MAX_BYTES: 10000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10000000
      KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: 60000
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_DELETE_RETENTION_MS: 1000
    volumes:
      - ./kafka_data/kafka0/data:/data
      - ./kafka_data/kafka0/log:/datalog
    networks:
      default:
        ipv4_address: 172.20.0.12
  kafka1:
    image: wurstmeister/kafka:2.11-0.10.2.2
    depends_on:
      - zookeeper
    container_name: kafka1
    ports:
      - 9093:9093
      - 9193:9193
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9093
      KAFKA_LISTENERS: PLAINTEXT://kafka1:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      JMX_PORT: 9193
      KAFKA_ADVERTISED_PORT: 9093
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_MESSAGE_MAX_BYTES: 10000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10000000
      KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: 60000
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_DELETE_RETENTION_MS: 1000
    volumes:
      - ./kafka_data/kafka1/data:/data
      - ./kafka_data/kafka1/log:/datalog
    networks:
      default:
        ipv4_address: 172.20.0.13
  kafka2:
    image: wurstmeister/kafka:2.11-0.10.2.2
    depends_on:
      - zookeeper
    container_name: kafka2
    ports:
      - 9094:9094
      - 9194:9194
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9094
      KAFKA_LISTENERS: PLAINTEXT://kafka2:9094
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 2
      JMX_PORT: 9194
      KAFKA_ADVERTISED_PORT: 9094
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_MESSAGE_MAX_BYTES: 10000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10000000
      KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: 60000
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_DELETE_RETENTION_MS: 1000
    volumes:
      - ./kafka_data/kafka2/data:/data
      - ./kafka_data/kafka2/log:/datalog
    networks:
      default:
        ipv4_address: 172.20.0.14
  kafka-manager:
    image: hlebalbau/kafka-manager:1.3.3.22
    command:
      - "-Dcmak.zkhosts=zookeeper:2181"
      - "-DbasicAuthentication.enabled=true"
      - "-DbasicAuthentication.username=admin"
      - "-DbasicAuthentication.password=admin"
    restart: unless-stopped
    container_name: kafka-manager
    hostname: kafka-manager
    ports:
      - "9000:9000"
    links: # 连接本compose文件创建的container
      - kafka0
      - kafka1
      - kafka2
    external_links: # 连接本compose文件以外的container
      - zookeeper
    environment:
      ZK_HOSTS: zookeeper:2181                 ## 修改:宿主机IP
      TZ: CST-8
networks:
  default:
    external:
      name: zk_kafka
